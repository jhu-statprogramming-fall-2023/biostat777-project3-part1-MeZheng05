[{"path":"/articles/corrplot-intro.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"An Introduction to corrplot Package","text":"R package corrplot provides visual exploratory tool correlation matrix supports automatic variable reordering help detect hidden patterns among variables. corrplot easy use provides rich array plotting options visualization method, graphic layout, color, legend, text labels, etc. also provides p-values confidence intervals help users determine statistical significance correlations. corrplot() 50 parameters, however mostly common ones . can get correlation matrix plot one line code scenes. mostly using parameters include method, type, order, diag, etc. seven visualization methods (parameter method) corrplot package, named 'circle', 'square', 'ellipse', 'number', 'shade', 'color', 'pie'. Color intensity glyph proportional correlation coefficients default color setting. 'circle' 'square', areas circles squares show absolute value corresponding correlation coefficients. 'ellipse', ellipses eccentricity parametrically scaled correlation value. comes D.J. Murdoch E.D. Chow’s job, see section References. 'number', coefficients numbers different color. 'color', square equal size different color. 'shade', similar 'color', negative coefficients glyphs shaded. Method 'pie' 'shade' come Michael Friendly’s job. 'pie', circles filled clockwise positive values, anti-clockwise negative values. corrplot.mixed() wrapped function mixed visualization style, can set visual methods lower upper triangular separately. three layout types (parameter type): 'full', 'upper' 'lower'. correlation matrix can reordered according correlation matrix coefficients. important identify hidden structure pattern matrix.","code":"library(corrplot) ## corrplot 0.92 loaded M = cor(mtcars) corrplot(M, method = 'number') # colorful number corrplot(M, method = 'color', order = 'alphabet') corrplot(M) # by default, method = 'circle' corrplot(M, order = 'AOE') # after 'AOE' reorder corrplot(M, method = 'shade', order = 'AOE', diag = FALSE) corrplot(M, method = 'square', order = 'FPC', type = 'lower', diag = FALSE) corrplot(M, method = 'ellipse', order = 'AOE', type = 'upper') corrplot.mixed(M, order = 'AOE') corrplot.mixed(M, lower = 'shade', upper = 'pie', order = 'hclust')"},{"path":"/articles/corrplot-intro.html","id":"reorder-a-correlation-matrix","dir":"Articles","previous_headings":"","what":"Reorder a correlation matrix","title":"An Introduction to corrplot Package","text":"details four order algorithms, named 'AOE', 'FPC', 'hclust', 'alphabet' following. 'AOE' angular order eigenvectors. calculated order angles \\(a_i\\), \\[ a_i = \\begin{cases}             \\arctan (e_{i2}/e_{i1}), & \\text{$e_{i1}>0$;}              \\newline             \\arctan (e_{i2}/e_{i1}) + \\pi, & \\text{otherwise.} \\end{cases}          \\] \\(e_1\\) \\(e_2\\) largest two eigenvalues correlation matrix. See Michael Friendly (2002) details. 'FPC' first principal component order. 'hclust' hierarchical clustering order, 'hclust.method' agglomeration method used. 'hclust.method' one 'ward', 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' 'centroid'. 'alphabet' alphabetical order. can also reorder matrix ‘manually’ via function corrMatOrder(). using 'hclust', corrplot() can draw rectangles around plot correlation matrix based results hierarchical clustering.   R package seriation provides infrastructure ordering objects implementation several seriation/sequencing/ordination techniques reorder matrices, dissimilarity matrices, dendrograms. information, see section References. can reorder matrix via seriation package corrplot . examples. Methods 'PCA_angle' 'HC' seriation, 'AOE' 'hclust' separately corrplot() corrMatOrder(). plots seriation.       corrRect() can add rectangles plot three ways(parameter index, name namesMat) corrplot(). can use pipe operator *>% package magrittr convenience. Since R 4.1.0, |> supported without extra package.","code":"corrplot(M, order = 'hclust', addrect = 2) corrplot(M, method = 'square', diag = FALSE, order = 'hclust',          addrect = 3, rect.col = 'blue', rect.lwd = 3, tl.pos = 'd') library(seriation) ## Warning: package 'seriation' was built under R version 4.3.2 list_seriation_methods('matrix') ##  [1] \"AOE\"       \"BEA\"       \"BEA_TSP\"   \"CA\"        \"Heatmap\"   \"Identity\"  ##  [7] \"LLE\"       \"Mean\"      \"PCA\"       \"PCA_angle\" \"Random\"    \"Reverse\" list_seriation_methods('dist') ##  [1] \"ARSA\"           \"BBURCG\"         \"BBWRCG\"         \"Enumerate\"      ##  [5] \"GSA\"            \"GW\"             \"GW_average\"     \"GW_complete\"    ##  [9] \"GW_single\"      \"GW_ward\"        \"HC\"             \"HC_average\"     ## [13] \"HC_complete\"    \"HC_single\"      \"HC_ward\"        \"Identity\"       ## [17] \"isomap\"         \"isoMDS\"         \"MDS\"            \"MDS_angle\"      ## [21] \"metaMDS\"        \"monoMDS\"        \"OLO\"            \"OLO_average\"    ## [25] \"OLO_complete\"   \"OLO_single\"     \"OLO_ward\"       \"QAP_2SUM\"       ## [29] \"QAP_BAR\"        \"QAP_Inertia\"    \"QAP_LS\"         \"R2E\"            ## [33] \"Random\"         \"Reverse\"        \"Sammon_mapping\" \"SGD\"            ## [37] \"Spectral\"       \"Spectral_norm\"  \"SPIN_NH\"        \"SPIN_STS\"       ## [41] \"TSP\"            \"VAT\" data(Zoo) Z = cor(Zoo[, -c(15, 17)])  dist2order = function(corr, method, ...) {   d_corr = as.dist(1 - corr)   s = seriate(d_corr, method = method, ...)   i = get_order(s)   return(i) } # Fast Optimal Leaf Ordering for Hierarchical Clustering i = dist2order(Z, 'OLO') corrplot(Z[i, i], cl.pos = 'n') # Quadratic Assignment Problem i = dist2order(Z, 'QAP_2SUM') corrplot(Z[i, i], cl.pos = 'n') # Multidimensional Scaling i = dist2order(Z, 'MDS_nonmetric') ## Warning in get_seriation_method(\"dist\", method): seriation method ## 'MDS_nonmetric' is now deprecated and will be removed in future releases. Using ## `isoMDS` corrplot(Z[i, i], cl.pos = 'n') # Simulated annealing i = dist2order(Z, 'ARSA') corrplot(Z[i, i], cl.pos = 'n') # TSP solver i = dist2order(Z, 'TSP') corrplot(Z[i, i], cl.pos = 'n') # Spectral seriation i = dist2order(Z, 'Spectral') corrplot(Z[i, i], cl.pos = 'n') library(magrittr)  # Rank-two ellipse seriation, use index parameter i = dist2order(Z, 'R2E') corrplot(Z[i, i], cl.pos = 'n') %>% corrRect(c(1, 9, 15)) # use name parameter # Since R 4.1.0, the following one line code works: # corrplot(M, order = 'AOE') |> corrRect(name = c('gear', 'wt', 'carb')) corrplot(Z, order = 'AOE') %>%   corrRect(name = c('tail', 'airborne', 'venomous', 'predator')) # use namesMat parameter r = rbind(c('eggs', 'catsize', 'airborne', 'milk'),           c('catsize', 'eggs', 'milk', 'airborne')) corrplot(Z, order = 'hclust') %>% corrRect(namesMat = r)"},{"path":"/articles/corrplot-intro.html","id":"change-color-spectra-color-legend-and-text-legend","dir":"Articles","previous_headings":"","what":"Change color spectra, color-legend and text-legend","title":"An Introduction to corrplot Package","text":"can get sequential diverging colors COL1() COL2(). color palettes borrowed RColorBrewer package. Notice: middle color getting COL2() fixed '#FFFFFF'(white), thus can visualizing element 0 white color. COL1(): Get sequential colors, suitable visualize non-negative non-positive matrix (e.g. matrix [0, 20], [-100, -10], [100, 500]). COL2(): Get diverging colors, suitable visualize matrix elements partly positive partly negative (e.g. correlation matrix [-1, 1], [-20, 100]). colors correlation plots can customized col corrplot(). distributed uniformly col.lim interval. .corr TRUE, col COL2('RdBu', 200). corr non-negative non-positive matrix, col COL1('YlOrBr', 200); otherwise (elements partly positive partly negative), col COL2('RdBu', 200). col.lim c(-1, 1) .corr TRUE, col.lim c(min(corr), max(corr)) .corr FALSE. NOTICE: set col.lim .corr TRUE, assigning colors still distributed uniformly [-1, 1], affect display color-legend. .corr: logical, whether input matrix correlation matrix . default value TRUE. can visualize non-correlation matrix setting .corr = FALSE. diverging colors COL2() sequential colors COL1() shown . Diverging colors:  Sequential colors:  Usage COL1() COL2(): addition, function colorRampPalette() convenient generating color spectrum. Parameters group cl.* color-legend. common-using : cl.pos position color labels. character logical. character, must one 'r' (means right, default type='upper' 'full'), 'b' (means bottom, default type='lower') 'n'(means don’t draw color-label). cl.ratio justify width color-legend, 0.1~0.2 suggested. Parameters group tl.* text-legend. common-using : tl.pos position text labels. character logical. character, must one 'lt', 'ld', 'td', 'd', 'l' 'n'. 'lt'(default type='full') means left top, 'ld'(default type='lower') means left diagonal, 'td'(default type='upper') means top diagonal(near), 'd' means diagonal, 'l' means left, 'n' means don’t add text-label. tl.cex size text label (variable names). tl.srt text label string rotation degrees.","code":"COL1(sequential = c(\"Oranges\", \"Purples\", \"Reds\", \"Blues\", \"Greens\",                      \"Greys\", \"OrRd\", \"YlOrRd\", \"YlOrBr\", \"YlGn\"), n = 200)  COL2(diverging = c(\"RdBu\", \"BrBG\", \"PiYG\", \"PRGn\", \"PuOr\", \"RdYlBu\"), n = 200) corrplot(M, order = 'AOE', col = COL2('RdBu', 10)) corrplot(M, order = 'AOE', addCoef.col = 'black', tl.pos = 'd',          cl.pos = 'n', col = COL2('PiYG')) corrplot(M, method = 'square', order = 'AOE', addCoef.col = 'black', tl.pos = 'd',          cl.pos = 'n', col = COL2('BrBG')) ## bottom color legend, diagonal text legend, rotate text label corrplot(M, order = 'AOE', cl.pos = 'b', tl.pos = 'd',          col = COL2('PRGn'), diag = FALSE) ## text labels rotated 45 degrees and  wider color legend with numbers right aligned corrplot(M, type = 'lower', order = 'hclust', tl.col = 'black',          cl.ratio = 0.2, tl.srt = 45, col = COL2('PuOr', 10)) ## remove color legend, text legend and principal diagonal glyph corrplot(M, order = 'AOE', cl.pos = 'n', tl.pos = 'n',          col = c('white', 'black'), bg = 'gold2')"},{"path":"/articles/corrplot-intro.html","id":"visualize-non-correlation-matrix-na-value-and-math-label","dir":"Articles","previous_headings":"","what":"Visualize non-correlation matrix, NA value and math label","title":"An Introduction to corrplot Package","text":"can visualize non-correlation matrix set .corr=FALSE, assign colors col.lim. matrix positive negative values, matrix transformation keep every values positiveness negativeness. matrix rectangular, can adjust aspect ratio win.asp parameter make matrix rendered square.     Notice: .corr TRUE, col.lim affect color legend change , color correlation matrix plot still assigned c(-1, 1)   default, corrplot renders NA values '?' characters. Using na.label parameter, possible use different value (max. two characters supported). Since version 0.78, possible use plotmath expression variable names. activate plotmath rendering, prefix label '$'.","code":"## matrix in [20, 26], grid.col N1 = matrix(runif(80, 20, 26), 8) corrplot(N1, is.corr = FALSE, col.lim = c(20, 30), method = 'color', tl.pos = 'n',          col = COL1('YlGn'), cl.pos = 'b', addgrid.col = 'white', addCoef.col = 'grey50') ## matrix in [-15, 10] N2 = matrix(runif(80, -15, 10), 8)  ## using sequential colors, transKeepSign = FALSE corrplot(N2, is.corr = FALSE, transKeepSign = FALSE, method = 'color', col.lim = c(-15, 10),           tl.pos = 'n', col = COL1('YlGn'), cl.pos = 'b', addCoef.col = 'grey50') ## Warning in title(title, ...): \"transKeepSign\" is not a graphical parameter ## using diverging colors, transKeepSign = TRUE (default) corrplot(N2, is.corr = FALSE, col.lim = c(-15, 10),           tl.pos = 'n', col = COL2('PiYG'), cl.pos = 'b', addCoef.col = 'grey50') ## using diverging colors corrplot(N2, is.corr = FALSE, method = 'color', col.lim = c(-15, 10), tl.pos = 'n',          col = COL2('PiYG'), cl.pos = 'b', addCoef.col = 'grey50') # when is.corr=TRUE, col.lim only affect the color legend display corrplot(M/2) corrplot(M/2, col.lim=c(-0.5, 0.5)) M2 = M diag(M2) = NA colnames(M2) = rep(c('$alpha+beta', '$alpha[0]', '$alpha[beta]'),                    c(4, 4, 3)) rownames(M2) = rep(c('$Sigma[i]^n', '$sigma',  '$alpha[0]^100', '$alpha[beta]'),                    c(2, 4, 2, 3)) corrplot(10*abs(M2), is.corr = FALSE, col.lim = c(0, 10), tl.cex = 1.5)"},{"path":"/articles/corrplot-intro.html","id":"visualize-p-value-and-confidence-interval","dir":"Articles","previous_headings":"","what":"Visualize p-value and confidence interval","title":"An Introduction to corrplot Package","text":"corrplot() can also visualize p-value confidence interval correlation matrix plot. important parameters. p-value: p.mat p-value matrix, NULL, parameter sig.level, insig, pch, pch.col, pch.cex invalid. sig.level significant level, default value 0.05. p-value p-mat bigger sig.level, corresponding correlation coefficient regarded insignificant. insig 'label_sig', sig.level can increasing vector significance levels, case pch used highest p-value interval multiple times (e.g. '*', '**', '***') lower p-value interval. insig Character, specialized insignificant correlation coefficients, 'pch' (default), 'p-value', 'blank', 'n', 'label_sig'. 'blank', wipe away corresponding glyphs; 'p-value', add p-values corresponding glyphs; 'pch', add characters (see pch details) corresponding glyphs; 'n', don’t take measures; 'label_sig', mark significant correlations pch (see sig.level). pch adding character glyphs insignificant correlation coefficients (valid insig 'pch'). See ?par . confidence interval: plotCI character method plotting confidence interval. 'n', don’t plot confidence interval. 'rect', plot rectangles whose upper side means upper bound lower side means lower bound respectively. lowCI.mat matrix lower bound confidence interval. uppCI.mat Matrix upper bound confidence interval. can get p-value matrix confidence intervals matrix cor.mtest() returns list containing: p p-values matrix. lowCI lower bound confidence interval matrix. uppCI lower bound confidence interval matrix.        Visualize confidence interval.","code":"testRes = cor.mtest(mtcars, conf.level = 0.95)  ## specialized the insignificant value according to the significant level corrplot(M, p.mat = testRes$p, sig.level = 0.10, order = 'hclust', addrect = 2) ## leave blank on non-significant coefficient ## add significant correlation coefficients corrplot(M, p.mat = testRes$p, method = 'circle', type = 'lower', insig='blank',          addCoef.col ='black', number.cex = 0.8, order = 'AOE', diag=FALSE) ## leave blank on non-significant coefficient ## add all correlation coefficients corrplot(M, p.mat = testRes$p, method = 'circle', type = 'lower', insig='blank',          order = 'AOE', diag = FALSE)$corrPos -> p1 text(p1$x, p1$y, round(p1$corr, 2)) ## add p-values on no significant coefficients corrplot(M, p.mat = testRes$p, insig = 'p-value') ## add all p-values corrplot(M, p.mat = testRes$p, insig = 'p-value', sig.level = -1) ## add significant level stars corrplot(M, p.mat = testRes$p, method = 'color', diag = FALSE, type = 'upper',          sig.level = c(0.001, 0.01, 0.05), pch.cex = 0.9,          insig = 'label_sig', pch.col = 'grey20', order = 'AOE') ## add significant level stars and cluster rectangles corrplot(M, p.mat = testRes$p, tl.pos = 'd', order = 'hclust', addrect = 2,          insig = 'label_sig', sig.level = c(0.001, 0.01, 0.05),          pch.cex = 0.9, pch.col = 'grey20') # Visualize confidence interval corrplot(M, lowCI = testRes$lowCI, uppCI = testRes$uppCI, order = 'hclust',          tl.pos = 'd', rect.col = 'navy', plotC = 'rect', cl.pos = 'n') # Visualize confidence interval and cross the significant coefficients corrplot(M, p.mat = testRes$p, lowCI = testRes$lowCI, uppCI = testRes$uppCI,          addrect = 3, rect.col = 'navy', plotC = 'rect', cl.pos = 'n')"},{"path":"/articles/corrplot-intro.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"An Introduction to corrplot Package","text":"Michael Friendly (2002). Corrgrams: Exploratory displays correlation matrices. American Statistician, 56, 316–324. D.J. Murdoch, E.D. Chow (1996). graphical display large correlation matrices. American Statistician, 50, 178–180. Michael Hahsler, Christian Buchta Kurt Hornik (2020). seriation: Infrastructure Ordering Objects Using Seriation. R package version 1.2-9. https://CRAN.R-project.org/package=seriation Hahsler M, Hornik K, Buchta C (2008). “Getting things order: introduction R package seriation.” Journal Statistical Software, 25(3), 1-34. ISSN 1548-7660, doi: 10.18637/jss.v025.i03 (URL: https://doi.org/10.18637/jss.v025.i03), <URL: https://www.jstatsoft.org/v25/i03/>.","code":""},{"path":"/articles/Example_analysis.html","id":"question","dir":"Articles","previous_headings":"","what":"Question","title":"Example_analysis","text":"centenarians dataset, includes men women lives/lived longer 100 years countries world, primary objective investigate potential discrepancies life expectancy based factors gender, nationality, birth time.","code":""},{"path":"/articles/Example_analysis.html","id":"original-data","dir":"Articles","previous_headings":"","what":"Original data","title":"Example_analysis","text":"data used TidyTuesday. contains 200 known verified oldest people around world. Please click link want go source csv data file. original source data comes Wikipedia List verified oldest people via frankiethull GitHub, can read information dataset readme .","code":""},{"path":[]},{"path":"/articles/Example_analysis.html","id":"load-the-data","dir":"Articles","previous_headings":"","what":"Load the data","title":"Example_analysis","text":"","code":"library(here) #> here() starts at C:/Users/zheng/Desktop/StatisticalPrograming/corrplot #In this step, you must test if a directory named data exists locally. If it does not, write an R function that creates it programmatically.  library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.2     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.0 #> ✔ ggplot2   3.4.3     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.2     ✔ tidyr     1.3.0 #> ✔ purrr     1.0.2 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors  if (!dir.exists(here(\"data\"))) {     dir.create(here(\"data\")) }  # saves data only once (not each time you knit a R Markdown) if (!file.exists(here(\"data\", \"centenarians.rda\"))) {      tuesdata <- tidytuesdayR::tt_load(\"2023-05-30\")      centenarians <- tuesdata$centenarians      save(centenarians, file = here(\"data\", \"centenarians.rda\"))  }  #Read in the data locally each time you knit/render. load(here(\"data\", \"centenarians.rda\"))   str(centenarians) #> spc_tbl_ [200 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame) #>  $ rank                       : num [1:200] 1 2 3 4 5 6 7 8 9 10 ... #>  $ name                       : chr [1:200] \"Jeanne Calment\" \"Kane Tanaka\" \"Sarah Knauss\" \"Lucile Randon\" ... #>  $ birth_date                 : Date[1:200], format: \"1875-02-21\" \"1903-01-02\" ... #>  $ death_date                 : Date[1:200], format: \"1997-08-04\" \"2022-04-19\" ... #>  $ age                        : num [1:200] 122 119 119 119 118 ... #>  $ place_of_death_or_residence: chr [1:200] \"France\" \"Japan\" \"United States\" \"France\" ... #>  $ gender                     : chr [1:200] \"female\" \"female\" \"female\" \"female\" ... #>  $ still_alive                : chr [1:200] \"deceased\" \"deceased\" \"deceased\" \"deceased\" ... #>  - attr(*, \"spec\")= #>   .. cols( #>   ..   rank = col_double(), #>   ..   name = col_character(), #>   ..   birth_date = col_date(format = \"\"), #>   ..   death_date = col_date(format = \"\"), #>   ..   age = col_double(), #>   ..   place_of_death_or_residence = col_character(), #>   ..   gender = col_character(), #>   ..   still_alive = col_character() #>   .. ) #>  - attr(*, \"problems\")=<externalptr>"},{"path":"/articles/Example_analysis.html","id":"data-cleaning-and-wranggling","dir":"Articles","previous_headings":"","what":"Data Cleaning and Wranggling","title":"Example_analysis","text":"","code":"library(dplyr) library(lubridate) library(stringr) library(forcats) centenarians <- centenarians %>% mutate(   country = factor(place_of_death_or_residence),   sex = factor(gender, labels = c(\"female\", \"male\")),    status = factor(still_alive, labels = c(\"alive\", \"deceased\")) ) %>%   select(-place_of_death_or_residence, -gender, -still_alive)  #used functions #factor(), mutate(), select()  #use map_lgl() in purrr to check if these three newly created variables are factor indeed.  library(purrr) map_lgl(.x = centenarians, .f = is.factor) #>       rank       name birth_date death_date        age    country        sex  #>      FALSE      FALSE      FALSE      FALSE      FALSE       TRUE       TRUE  #>     status  #>       TRUE"},{"path":[]},{"path":"/articles/Example_analysis.html","id":"life-expectancy-among-males-and-females","dir":"Articles","previous_headings":"Data Analysis","what":"Life Expectancy among Males and Females","title":"Example_analysis","text":"life expectancy among oldest females higher life expectancy among oldest males.","code":"centenarians %>% group_by(sex) %>% summarise(mean_life_expectancy = sum(age)/n())  #> # A tibble: 2 × 2 #>   sex    mean_life_expectancy #>   <fct>                 <dbl> #> 1 female                 116. #> 2 male                   113. #used functions #group_by(), summarise(), n() age_sex <- centenarians %>% group_by(sex) %>% summarise(mean_life_expectancy = sum(age)/n())  age_sex <- data.frame(age_sex)  library(ggplot2) p <- ggplot() + geom_boxplot(data = centenarians, aes(x = sex, y = age)) + geom_point(data = age_sex, aes(y = mean_life_expectancy, x = sex), shape = 18, color = \"red\", size = 6) + labs(title = \"Life Expectancy by Sex\", subtitle = \"The red diamond is the calculated mean life expectancy among these two group. We can see that\\nwomen has a higher mean life expectancy than men. Also, in the upper 25 percentile, women also\\n have a much higher life expectancy than men.\", y = \"Life Expectancy\", caption = \"Meilin Zheng\") + theme_bw()  #function used  #geom_boxplot(), geom_point()"},{"path":"/articles/Example_analysis.html","id":"life-expectancy-by-country","dir":"Articles","previous_headings":"Data Analysis","what":"Life Expectancy by Country","title":"Example_analysis","text":"table gives t6 countries highest number oldest people. table , can see among 200 oldest people, 66 United States, 46 Japan. observing table, still questionable whether United States Japan highest number oldest people world. dataset may sampling bias got include oldest adult places around world. However, still use 6 countries analysis since larger amount samples. Among six countries, people France highest life expectancy.","code":"centenarians %>% group_by(country) %>% summarise(total = n()) %>% mutate(country_lump = fct_lump(country, 6)) %>% group_by(country_lump) %>% summarise(total = sum(total)) %>% arrange(desc(total)) %>% head(6) #> # A tibble: 6 × 2 #>   country_lump   total #>   <fct>          <int> #> 1 United States     66 #> 2 Japan             46 #> 3 France             9 #> 4 Italy              9 #> 5 Spain              9 #> 6 United Kingdom     9  #function used #fct_lump() centenarians_reduced <- centenarians %>% filter(country == \"United States\" | country == \"Japan\" | country == \"France\" | country == \"Italy\" | country == \"Spain\" | country == \"United Kingdom\") #functions used #filter() centenarians_reduced %>% group_by(country) %>% summarise(mean_life_expectancy = sum(age)/n()) #> # A tibble: 6 × 2 #>   country        mean_life_expectancy #>   <fct>                         <dbl> #> 1 France                         115. #> 2 Italy                          114. #> 3 Japan                          114. #> 4 Spain                          114. #> 5 United Kingdom                 114. #> 6 United States                  114. ggplot(centenarians_reduced) + geom_histogram(aes(x = age)) + geom_vline(aes(xintercept = mean(age)), color = \"red\", linetype = \"dashed\", size = 1) + theme_bw() + facet_wrap(country~.) + geom_vline(data = (centenarians_reduced %>% group_by(country) %>% summarise(mean_age = mean(age))), aes(xintercept = mean_age), color = \"green\", linetype = \"dashed\", size = 1) + labs(title = \"Histogram of Life Expectancy Distribution by Countries\", x = \"Life Expectancy\", subtitle = \"The dashed red line is the grand mean among these 6 countries, whereaes the dashed green line is the\\nmean life expectancy within each country. We can see that France has a higher mean life expectancy\\nthan the overal mean, while the United States, Japan, and Italy have a similar mean. Spain and the\\nUnited Kingdom have a slightly lower mean life expectancy than the grand mean.\", caption = \"Meilin Zheng\") #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated. #> `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. #used function #geom_histogram(), geom_vline(), facet.wrap()"},{"path":"/articles/Example_analysis.html","id":"life-expectancy-by-birth-time","dir":"Articles","previous_headings":"Data Analysis","what":"Life Expectancy by Birth Time","title":"Example_analysis","text":"","code":"centenarians_year <- centenarians %>% mutate(Year = year(birth_date))   #use mapping in purr to print out the unique birth year. unique_year <- function(x) unique(x) map_dbl(.x = centenarians_year$Year, .f = unique_year) #>   [1] 1875 1903 1880 1904 1900 1880 1900 1899 1901 1875 1898 1904 1889 1899 1898 #>  [16] 1905 1879 1905 1890 1896 1903 1907 1906 1901 1902 1907 1899 1905 1882 1897 #>  [31] 1903 1905 1877 1893 1882 1900 1878 1899 1894 1890 1904 1905 1891 1893 1902 #>  [46] 1908 1890 1906 1907 1871 1906 1890 1907 1887 1905 1886 1906 1897 1900 1896 #>  [61] 1884 1908 1907 1885 1895 1881 1908 1907 1896 1908 1903 1908 1895 1900 1901 #>  [76] 1890 1901 1889 1902 1903 1896 1896 1895 1880 1900 1900 1907 1893 1881 1882 #>  [91] 1890 1885 1907 1903 1905 1907 1873 1901 1896 1887 1897 1882 1891 1897 1896 #> [106] 1889 1906 1889 1905 1909 1890 1903 1884 1895 1889 1905 1880 1900 1903 1910 #> [121] 1906 1910 1885 1904 1896 1908 1907 1889 1909 1894 1903 1877 1906 1909 1896 #> [136] 1886 1881 1890 1909 1910 1888 1909 1904 1903 1876 1896 1894 1910 1909 1901 #> [151] 1907 1909 1907 1884 1908 1891 1891 1879 1906 1907 1902 1910 1896 1894 1905 #> [166] 1911 1901 1907 1910 1910 1856 1893 1888 1904 1889 1911 1878 1908 1908 1907 #> [181] 1875 1910 1881 1900 1908 1897 1908 1875 1911 1895 1909 1910 1895 1902 1893 #> [196] 1908 1909 1911 1911 1898 # all of the 200 people in the dataset are born in different years.  cor <- centenarians_year %>% select(age, Year) cor <- data.frame(cor)  cor.mtest(cor) #> $p #>             age       Year #> age  0.00000000 0.01438442 #> Year 0.01438442 0.00000000 #>  #> $lowCI #>             age       Year #> age   1.0000000 -0.3042884 #> Year -0.3042884  1.0000000 #>  #> $uppCI #>              age        Year #> age   1.00000000 -0.03494132 #> Year -0.03494132  1.00000000 #used cor.mtest() p <- corrplot(cor(cor)) p #> $corr #>             age       Year #> age   1.0000000 -0.1728444 #> Year -0.1728444  1.0000000 #>  #> $corrPos #>   xName yName x y       corr #> 1   age   age 1 2  1.0000000 #> 2   age  Year 1 1 -0.1728444 #> 3  Year   age 2 2 -0.1728444 #> 4  Year  Year 2 1  1.0000000 #>  #> $arg #> $arg$type #> [1] \"full\" #used corrplot() centenarians_year_1900 <- centenarians_year %>% filter(Year < 1900) p1 <- ggplot(centenarians_year_1900) + geom_point(aes(x = Year, y = age)) + theme_bw() + labs(title = \"Birth Year vs. Life Expectancy\\nbefore 20th Century\", subtitle = \"No obious association is observed between\\nbirth time and age.\", caption = \"Meilin Zheng\", y = \"Life Expectancy\") + scale_y_continuous(limits = c(110, 125))  centenarians_year_2000 <- centenarians_year %>% filter(Year > 1900) p2 <- ggplot(centenarians_year_2000) + geom_point(aes(x = Year, y = age)) + theme_bw() + labs(title = \"Birth Year vs. Life Expectancy\\nafter 20th Century\", subtitle = \"No obious association is observed between\\nbirth time and age.\", caption = \"Meilin Zheng\", y = \"Life Expectancy\") + scale_y_continuous(limits = c(110, 125))"},{"path":"/articles/Example_analysis.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"Example_analysis","text":"conclusion, found female higher life expectancy male. Also, developed countries United States Japan seem people greater life expectancy. obvious association observed time people born age.","code":""},{"path":[]},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Taiyun Wei. Maintainer, author. Viliam Simko. Author. Michael Levy. Contributor. Yihui Xie. Contributor. Yan Jin. Contributor. Jeff Zemla. Contributor. Moritz Freidank. Contributor. Jun Cai. Contributor. Tomas Protivinsky. Contributor.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taiyun Wei Viliam Simko (2022). R package 'corrplot': Visualization Correlation Matrix (Version 0.93). Available https://github.com/taiyun/corrplot","code":"@Manual{corrplot2022,   title = {R package 'corrplot': Visualization of a Correlation Matrix},   author = {Taiyun Wei and Viliam Simko},   year = {2022},   note = {(Version 0.93)},   url = {https://github.com/taiyun/corrplot}, }"},{"path":"/index.html","id":"url-to-the-github-link-to-where-the-original-r-package-came-from","dir":"","previous_headings":"","what":"Visualization of a Correlation Matrix","title":"Visualization of a Correlation Matrix","text":"Please click link /","code":""},{"path":"/index.html","id":"url-to-the-deployed-website-that-you-will-do-in-part-1e","dir":"","previous_headings":"","what":"URL to the deployed website that you will do in Part 1E","title":"Visualization of a Correlation Matrix","text":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-MeZheng05.","code":""},{"path":"/index.html","id":"description-of-the-5-things-you-customized-in-your-pkgdown-website","dir":"","previous_headings":"","what":"Description of the 5 things you customized in your pkgdown website.","title":"Visualization of a Correlation Matrix","text":"bslib, added bg change page background color black. also added fg text color white. also used code-bg change code chunk color. added icon navbar people easily navigate introduction page website. also added icon navbar people go original github website corrplot package.","code":""},{"path":"/index.html","id":"summary","dir":"","previous_headings":"","what":"Summary","title":"Visualization of a Correlation Matrix","text":"R package corrplot provides visual exploratory tool correlation matrix supports automatic variable reordering help detect hidden patterns among variables. corrplot easy use provides rich array plotting options visualization method, graphic layout, color, legend, text labels, etc. also provides p-values confidence intervals help users determine statistical significance correlations. examples, see online vignette. package licensed MIT license, available CRAN: https://cran.r-project.org/package=corrplot.","code":""},{"path":"/index.html","id":"basic-example","dir":"","previous_headings":"","what":"Basic example","title":"Visualization of a Correlation Matrix","text":"","code":"library(corrplot) M = cor(mtcars) corrplot(M, order = 'hclust', addrect = 2)"},{"path":"/index.html","id":"download-and-install","dir":"","previous_headings":"","what":"Download and Install","title":"Visualization of a Correlation Matrix","text":"download release version package CRAN, type following R command line: download development version package, type following R command line:","code":"install.packages('corrplot') devtools::install_github('taiyun/corrplot', build_vignettes = TRUE)"},{"path":"/index.html","id":"how-to-cite","dir":"","previous_headings":"","what":"How to cite","title":"Visualization of a Correlation Matrix","text":"cite corrplot properly, call R built-command citation('corrplot') follows:","code":"citation('corrplot')"},{"path":"/index.html","id":"list-of-exported-function","dir":"","previous_headings":"","what":"List of Exported Function","title":"Visualization of a Correlation Matrix","text":"COL1() Get sequential colors COL2() Get diverging colors colorlegend() Draw color legend. cor.mtest() Significance test produces p-values confidence intervals pair input features. corrMatOrder() Reorder correlation matrix. corrplot-package Visualization correlation matrix corrplot.mixed() Using mixed methods visualize correlation matrix. corrplot() visualization correlation matrix. corrRect.hclust() Draw rectangles correlation matrix graph. corrRect() Draw rectangle(s) correlation matrix graph.","code":""},{"path":"/index.html","id":"reporting-bugs-and-other-issues","dir":"","previous_headings":"","what":"Reporting bugs and other issues","title":"Visualization of a Correlation Matrix","text":"encounter clear bug, please file minimal reproducible example github.","code":""},{"path":"/reference/col1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sequential colors — COL1","title":"Get sequential colors — COL1","text":"Get sequential colors palette theme name n. color palettes RColorBrewer. Sequential colors suitable visualize non-negative non-positive matrix (e.g. matrix [0, 20], [-100, -10], [100, 500]).","code":""},{"path":"/reference/col1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sequential colors — COL1","text":"","code":"COL1(   sequential = c(\"Oranges\", \"Purples\", \"Reds\", \"Blues\", \"Greens\", \"Greys\", \"OrRd\",     \"YlOrRd\", \"YlOrBr\", \"YlGn\"),   n = 200 )"},{"path":"/reference/col1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sequential colors — COL1","text":"sequential Sequential color Palettes n number colors (>= 1) palette.","code":""},{"path":"/reference/col1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sequential colors — COL1","text":"character vector containing color names","code":""},{"path":[]},{"path":"/reference/col1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sequential colors — COL1","text":"","code":"## diverging colors par(mar = c(0, 0, 0, 0) + 0.1) plot(0, xlim = c(-0.1, 1), ylim = c(0, 1), type = 'n')  col = c('RdBu', 'BrBG', 'PiYG', 'PRGn', 'PuOr', 'RdYlBu')  for(i in 1:length(col)) {   colorlegend(COL2(col[i]), -10:10/10, align = 'l', cex = 0.8, xlim = c(0, 1),               ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)   text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2, cex = 0.8) }     ## sequential colors par(mar = c(0, 0, 0, 0) + 0.1) plot(0, xlim = c(-0.1, 1), ylim = c(0, 1), type = 'n')  col = c('Oranges', 'Purples', 'Reds', 'Blues', 'Greens', 'Greys', 'OrRd',         'YlOrRd', 'YlOrBr', 'YlGn')  for(i in 1:length(col)) {   colorlegend(COL1(col[i]), 0:10, align = 'l', cex = 0.8, xlim = c(0, 1),               ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)   text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2) }     ## other examples to show colorlegend function par(mar = rep(0, 4)) plot(0, xlim = c(0, 6), ylim = c(-0.5, 1.2), type = 'n')  colorlegend(rainbow(100), 0:9)  colorlegend(heat.colors(100), LETTERS[1:12], xlim = c(1, 2))  colorlegend(terrain.colors(100), 0:9, ratio.colbar = 0.6,             lim.segment = c(0, 0.6), xlim = c(2, 3), align = 'l')  colorlegend(topo.colors(100), 0:9, lim.segment = c(0, 0.6),             xlim = c(3, 4), align = 'l', offset = 0)  colorlegend(cm.colors(100), 1:5, xlim = c(4, 5))  colorlegend(sample(rainbow(12)), labels = LETTERS[1:12],             at = seq(0.05, 0.95, len = 12), xlim = c(5, 6), align = 'r')  colorlegend(colbar = grey(1:100 / 100), 1:10, col = 'red', align = 'l',             xlim = c(0, 6), ylim = c(-0.5, -0.1), vertical = FALSE)  colorlegend(sample(rainbow(12)),             labels = LETTERS[1:12], at = seq(0.05, 0.95, len = 12),             xlim = c(0, 6), ylim = c(1.1, 1.2), vertical = FALSE)"},{"path":"/reference/col2.html","id":null,"dir":"Reference","previous_headings":"","what":"Get diverging colors — COL2","title":"Get diverging colors — COL2","text":"Get diverging colors palette theme name n. color palettes RColorBrewer, middle color changing '#FFFFFF'(white), thus can visualize element 0 white color. Diverging colors suitable visualize matrix elements partly positive partly negative (e.g. correlation matrix [-1, 1], [-20, 100]).","code":""},{"path":"/reference/col2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get diverging colors — COL2","text":"","code":"COL2(diverging = c(\"RdBu\", \"BrBG\", \"PiYG\", \"PRGn\", \"PuOr\", \"RdYlBu\"), n = 200)"},{"path":"/reference/col2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get diverging colors — COL2","text":"diverging Diverging color Palettes n number colors (>= 1) palette.","code":""},{"path":"/reference/col2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get diverging colors — COL2","text":"character vector containing color names","code":""},{"path":[]},{"path":"/reference/col2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get diverging colors — COL2","text":"","code":"## diverging colors par(mar = c(0, 0, 0, 0) + 0.1) plot(0, xlim = c(-0.1, 1), ylim = c(0, 1), type = 'n')  col = c('RdBu', 'BrBG', 'PiYG', 'PRGn', 'PuOr', 'RdYlBu')  for(i in 1:length(col)) {   colorlegend(COL2(col[i]), -10:10/10, align = 'l', cex = 0.8, xlim = c(0, 1),               ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)   text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2, cex = 0.8) }     ## sequential colors par(mar = c(0, 0, 0, 0) + 0.1) plot(0, xlim = c(-0.1, 1), ylim = c(0, 1), type = 'n')  col = c('Oranges', 'Purples', 'Reds', 'Blues', 'Greens', 'Greys', 'OrRd',         'YlOrRd', 'YlOrBr', 'YlGn')  for(i in 1:length(col)) {   colorlegend(COL1(col[i]), 0:10, align = 'l', cex = 0.8, xlim = c(0, 1),               ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)   text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2) }     ## other examples to show colorlegend function par(mar = rep(0, 4)) plot(0, xlim = c(0, 6), ylim = c(-0.5, 1.2), type = 'n')  colorlegend(rainbow(100), 0:9)  colorlegend(heat.colors(100), LETTERS[1:12], xlim = c(1, 2))  colorlegend(terrain.colors(100), 0:9, ratio.colbar = 0.6,             lim.segment = c(0, 0.6), xlim = c(2, 3), align = 'l')  colorlegend(topo.colors(100), 0:9, lim.segment = c(0, 0.6),             xlim = c(3, 4), align = 'l', offset = 0)  colorlegend(cm.colors(100), 1:5, xlim = c(4, 5))  colorlegend(sample(rainbow(12)), labels = LETTERS[1:12],             at = seq(0.05, 0.95, len = 12), xlim = c(5, 6), align = 'r')  colorlegend(colbar = grey(1:100 / 100), 1:10, col = 'red', align = 'l',             xlim = c(0, 6), ylim = c(-0.5, -0.1), vertical = FALSE)  colorlegend(sample(rainbow(12)),             labels = LETTERS[1:12], at = seq(0.05, 0.95, len = 12),             xlim = c(0, 6), ylim = c(1.1, 1.2), vertical = FALSE)"},{"path":"/reference/colorlegend.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw color legend. — colorlegend","title":"Draw color legend. — colorlegend","text":"Draw color legend.","code":""},{"path":"/reference/colorlegend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw color legend. — colorlegend","text":"","code":"colorlegend(   colbar,   labels,   at = NULL,   xlim = c(0, 1),   ylim = c(0, 1),   vertical = TRUE,   ratio.colbar = 0.4,   lim.segment = \"auto\",   align = c(\"c\", \"l\", \"r\"),   addlabels = TRUE,   ... )"},{"path":"/reference/colorlegend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw color legend. — colorlegend","text":"colbar Vector, color colbar. labels Vector, numeric character written. Numeric vector (quantile), position put labels. See examples details. xlim See plot ylim See plot vertical Logical, whether colorlegend vertical horizon. ratio.colbar width ratio colorbar total colorlegend (including colorbar, segments labels). lim.segment Vector (quantile) length 2, elements [0,1], giving segments coordinates ranges. value NULL 'auto', ranges derived automatically. align Character, alignment type labels, 'l' means left, 'c' means center 'r' right. valid vertical TRUE. addlabels Logical, whether add text label . ... Additional arguments, passed plot","code":""},{"path":"/reference/colorlegend.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw color legend. — colorlegend","text":"Taiyun Wei","code":""},{"path":"/reference/colorlegend.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw color legend. — colorlegend","text":"","code":"## diverging colors par(mar = c(0, 0, 0, 0) + 0.1) plot(0, xlim = c(-0.1, 1), ylim = c(0, 1), type = 'n')  col = c('RdBu', 'BrBG', 'PiYG', 'PRGn', 'PuOr', 'RdYlBu')  for(i in 1:length(col)) {   colorlegend(COL2(col[i]), -10:10/10, align = 'l', cex = 0.8, xlim = c(0, 1),               ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)   text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2, cex = 0.8) }     ## sequential colors par(mar = c(0, 0, 0, 0) + 0.1) plot(0, xlim = c(-0.1, 1), ylim = c(0, 1), type = 'n')  col = c('Oranges', 'Purples', 'Reds', 'Blues', 'Greens', 'Greys', 'OrRd',         'YlOrRd', 'YlOrBr', 'YlGn')  for(i in 1:length(col)) {   colorlegend(COL1(col[i]), 0:10, align = 'l', cex = 0.8, xlim = c(0, 1),               ylim = c(i/length(col)-0.1, i/length(col)), vertical = FALSE)   text(-0.01, i/length(col)-0.02, col[i], adj = 0.5, pos = 2) }     ## other examples to show colorlegend function par(mar = rep(0, 4)) plot(0, xlim = c(0, 6), ylim = c(-0.5, 1.2), type = 'n')  colorlegend(rainbow(100), 0:9)  colorlegend(heat.colors(100), LETTERS[1:12], xlim = c(1, 2))  colorlegend(terrain.colors(100), 0:9, ratio.colbar = 0.6,             lim.segment = c(0, 0.6), xlim = c(2, 3), align = 'l')  colorlegend(topo.colors(100), 0:9, lim.segment = c(0, 0.6),             xlim = c(3, 4), align = 'l', offset = 0)  colorlegend(cm.colors(100), 1:5, xlim = c(4, 5))  colorlegend(sample(rainbow(12)), labels = LETTERS[1:12],             at = seq(0.05, 0.95, len = 12), xlim = c(5, 6), align = 'r')  colorlegend(colbar = grey(1:100 / 100), 1:10, col = 'red', align = 'l',             xlim = c(0, 6), ylim = c(-0.5, -0.1), vertical = FALSE)  colorlegend(sample(rainbow(12)),             labels = LETTERS[1:12], at = seq(0.05, 0.95, len = 12),             xlim = c(0, 6), ylim = c(1.1, 1.2), vertical = FALSE)"},{"path":"/reference/cor.mtest.html","id":null,"dir":"Reference","previous_headings":"","what":"Significance test which produces p-values and confidence intervals for each\r\npair of input features. — cor.mtest","title":"Significance test which produces p-values and confidence intervals for each\r\npair of input features. — cor.mtest","text":"Significance test produces p-values confidence intervals pair input features.","code":""},{"path":"/reference/cor.mtest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Significance test which produces p-values and confidence intervals for each\r\npair of input features. — cor.mtest","text":"","code":"cor.mtest(mat, ...)"},{"path":"/reference/cor.mtest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Significance test which produces p-values and confidence intervals for each\r\npair of input features. — cor.mtest","text":"mat Input matrix size NxF, N rows represent samples F columns represent features. ... Additional arguments passed function cor.test, e.g. conf.level = 0.95.","code":""},{"path":"/reference/cor.mtest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Significance test which produces p-values and confidence intervals for each\r\npair of input features. — cor.mtest","text":"Return list containing: p Square matrix size FxF p-values cells lowCI Square matrix size FxF, cell represents   lower part confidence interval uppCI Square matrix size FxF, cell represents   upper part confidence interval","code":""},{"path":[]},{"path":"/reference/corrMatOrder.html","id":null,"dir":"Reference","previous_headings":"","what":"Reorder a correlation matrix. — corrMatOrder","title":"Reorder a correlation matrix. — corrMatOrder","text":"Draw rectangle(s) around chart corrrlation matrix based number cluster's members.","code":""},{"path":"/reference/corrMatOrder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reorder a correlation matrix. — corrMatOrder","text":"","code":"corrMatOrder(   corr,   order = c(\"AOE\", \"FPC\", \"hclust\", \"alphabet\"),   hclust.method = c(\"complete\", \"ward\", \"ward.D\", \"ward.D2\", \"single\", \"average\",     \"mcquitty\", \"median\", \"centroid\") )"},{"path":"/reference/corrMatOrder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reorder a correlation matrix. — corrMatOrder","text":"corr Correlation matrix reorder. order Character, ordering method correlation matrix. 'AOE' angular order eigenvectors.      calculated order angles, \\(a_i\\):      $$ a_i = arctan (e_{i2} / e_{i1}), e_{i1} > 0$$      $$ a_i = arctan (e_{i2} / e_{i1}) + \\pi, otherwise.$$      \\(e_1\\) \\(e_2\\) largest two eigenvalues      matrix corr.      See Michael Friendly (2002) details. 'FPC' first principal component order. 'hclust' hierarchical clustering order. 'alphabet' alphabetical order. hclust.method Character, agglomeration method used order hclust. one 'ward', 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' 'centroid'.","code":""},{"path":"/reference/corrMatOrder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reorder a correlation matrix. — corrMatOrder","text":"Returns single permutation vector.","code":""},{"path":[]},{"path":"/reference/corrMatOrder.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Reorder a correlation matrix. — corrMatOrder","text":"Taiyun Wei","code":""},{"path":"/reference/corrMatOrder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reorder a correlation matrix. — corrMatOrder","text":"","code":"M = cor(mtcars)  (order.AOE = corrMatOrder(M, order = 'AOE')) #>  [1] 10  9  5  1  8  7  6  3  2  4 11 (order.FPC = corrMatOrder(M, order = 'FPC')) #>  [1]  2  3  6  4 11  7 10  9  5  8  1 (order.hc = corrMatOrder(M, order = 'hclust')) #>  [1] 11  6  4  2  3  7  8  1  5  9 10 (order.hc2 = corrMatOrder(M, order = 'hclust', hclust.method = 'ward.D')) #>  [1]  6  2  3  4 11  7  8  9 10  1  5  M.AOE = M[order.AOE, order.AOE] M.FPC = M[order.FPC, order.FPC] M.hc  = M[order.hc, order.hc] M.hc2 = M[order.hc2, order.hc2]    par(ask = TRUE) corrplot(M)  corrplot(M.AOE)  corrplot(M.FPC)  corrplot(M.hc)  corrplot(M.hc) corrRect.hclust(corr = M.hc, k = 2)   corrplot(M.hc) corrRect.hclust(corr = M.hc, k = 3)   corrplot(M.hc2) corrRect.hclust(M.hc2, k = 2, method = 'ward.D')"},{"path":"/reference/corrplot-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualization of a correlation matrix — corrplot-package","title":"Visualization of a correlation matrix — corrplot-package","text":"corrplot package graphical display correlation matrix, confidence interval general matrix. also contains algorithms matrix reordering. addition, corrplot good details, including choosing color, text labels, color labels, layout, etc.","code":""},{"path":"/reference/corrplot-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Visualization of a correlation matrix — corrplot-package","text":"Michael Friendly (2002). Corrgrams: Exploratory displays correlation matrices. American Statistician, 56, 316--324. D.J. Murdoch, E.D. Chow (1996). graphical display large correlation matrices. American Statistician, 50, 178--180.","code":""},{"path":[]},{"path":"/reference/corrplot-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Visualization of a correlation matrix — corrplot-package","text":"Taiyun Wei (weitaiyun@gmail.com) Viliam Simko (viliam.simko@gmail.com) Maintainer: Taiyun Wei (weitaiyun@gmail.com)","code":""},{"path":"/reference/corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"A visualization of a correlation matrix. — corrplot","title":"A visualization of a correlation matrix. — corrplot","text":"graphical display correlation matrix, confidence interval. details paid great attention . can also visualize general matrix setting .corr = FALSE.","code":""},{"path":"/reference/corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A visualization of a correlation matrix. — corrplot","text":"","code":"corrplot(   corr,   method = c(\"circle\", \"square\", \"ellipse\", \"number\", \"shade\", \"color\", \"pie\"),   type = c(\"full\", \"lower\", \"upper\"),   col = NULL,   col.lim = NULL,   is.corr = TRUE,   bg = \"white\",   title = \"\",   add = FALSE,   diag = TRUE,   outline = FALSE,   mar = c(0, 0, 0, 0),   addgrid.col = NULL,   addCoef.col = NULL,   addCoefasPercent = FALSE,   order = c(\"original\", \"AOE\", \"FPC\", \"hclust\", \"alphabet\"),   hclust.method = c(\"complete\", \"ward\", \"ward.D\", \"ward.D2\", \"single\", \"average\",     \"mcquitty\", \"median\", \"centroid\"),   addrect = NULL,   rect.col = \"black\",   rect.lwd = 2,   tl.pos = NULL,   tl.cex = 1,   tl.col = \"red\",   tl.offset = 0.4,   tl.srt = 90,   cl.pos = NULL,   cl.length = NULL,   cl.cex = 0.8,   cl.ratio = 0.15,   cl.align.text = \"c\",   cl.offset = 0.5,   number.cex = 1,   number.font = 2,   number.digits = NULL,   addshade = c(\"negative\", \"positive\", \"all\"),   shade.lwd = 1,   shade.col = \"white\",   transKeepSign = TRUE,   p.mat = NULL,   sig.level = 0.05,   insig = c(\"pch\", \"p-value\", \"blank\", \"n\", \"label_sig\"),   pch = 4,   pch.col = \"black\",   pch.cex = 3,   plotCI = c(\"n\", \"square\", \"circle\", \"rect\"),   lowCI.mat = NULL,   uppCI.mat = NULL,   na.label = \"?\",   na.label.col = \"black\",   win.asp = 1,   ... )"},{"path":"/reference/corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A visualization of a correlation matrix. — corrplot","text":"corr correlation matrix visualize, must square order 'original'. general matrix, please using .corr = FALSE convert. method Character, visualization method correlation matrix   used. Currently, supports seven methods, named 'circle'   (default), 'square', 'ellipse', 'number',   'pie', 'shade' 'color'. See examples details. areas circles squares show absolute value corresponding   correlation coefficients. Method 'pie' 'shade' came   Michael Friendly's job (adjustment shade added ),   'ellipse' came D.J. Murdoch E.D. Chow's job, see section   References. type Character, 'full' (default), 'upper' 'lower', display full matrix, lower triangular upper triangular matrix. col Vector, colors glyphs. distributed uniformly col.lim interval. .corr TRUE, default value COL2('RdBu', 200). .corr FALSE corr non-negative non-positive matrix, default value COL1('YlOrBr', 200); otherwise (elements partly positive partly negative), default value COL2('RdBu', 200). col.lim limits (x1, x2) interval assigning color   col. NULL,   col.lim c(-1, 1) .corr  TRUE,   col.lim c(min(corr), max(corr)) .corr   FALSE NOTICE: set col.lim .corr TRUE, assigning colors   still distributed uniformly [-1, 1], affect display   color-legend. .corr Logical, whether input matrix correlation matrix . can visualize non-correlation matrix setting .corr = FALSE. bg background color. title Character, title graph. add Logical, TRUE, graph added existing plot, otherwise new plot created. diag Logical, whether display correlation coefficients principal diagonal. outline Logical character, whether plot outline circles, square ellipse, color glyphs. pie, represents color circle outlining pie. outline TRUE, default value 'black'. mar See par. addgrid.col color grid. NA, add grid. NULL default value chosen. default value depends method, method color shade, color grid NA, , draw grid; otherwise 'grey'. addCoef.col Color coefficients added graph. NULL (default), add coefficients. addCoefasPercent Logic, whether translate coefficients percentage style spacesaving. order Character, ordering method correlation matrix. 'original' original order (default). 'AOE' angular order eigenvectors. 'FPC' first principal component order. 'hclust' hierarchical clustering order. 'alphabet' alphabetical order. See function corrMatOrder details. hclust.method Character, agglomeration method used order hclust. one 'ward', 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' 'centroid'. addrect Integer, number rectangles draws graph according hierarchical cluster, valid order hclust. NULL (default), add rectangles. rect.col Color rectangle border(s), valid addrect equal greater 1. rect.lwd Numeric, line width borders rectangle border(s), valid addrect equal greater 1. tl.pos Character logical, position text labels. character, must one 'lt', 'ld', 'td', 'd' 'n'. 'lt'(default type=='full') means left top, 'ld'(default type=='lower') means left diagonal, 'td'(default type=='upper') means top diagonal(near), 'l' means left, 'd' means diagonal, 'n' means add text-label. tl.cex Numeric, size text label (variable names). tl.col color text label. tl.offset Numeric, text label, see text. tl.srt Numeric, text label string rotation degrees, see text. cl.pos Character logical, position color-legend; character, must one 'r' (default type=='upper' 'full'), 'b' (default type=='lower') 'n', 'n' means draw color-legend. cl.length Integer, number number-text color-legend, passed colorlegend. NULL, cl.length length(col) + 1 length(col) <=20; cl.length 11 length(col) > 20 cl.cex Numeric, cex number-label color-legend,  passed colorlegend. cl.ratio Numeric, justify width color-legend, 0.1~0.2 suggested. cl.align.text Character, 'l', 'c' (default) 'r', number-label color-legend, 'l' means left, 'c' means center, 'r' means right. cl.offset Numeric, number-label color-legend, see text. number.cex cex parameter send call text writing correlation coefficients plot. number.font font parameter send call text writing correlation coefficients plot. number.digits indicating number decimal digits added plot. Non-negative integer NULL, default NULL. addshade Character shade style, 'negative', 'positive' '', valid method 'shade'. '', correlation coefficients' glyph shaded; 'positive', positive shaded; 'negative', negative shaded. Note: angle shade line different, 45 degrees positive 135 degrees negative. shade.lwd Numeric, line width shade. shade.col color shade line. transKeepSign Logical, whether keep matrix values' sign   transforming non-corr matrix plotting.   valid .corr = FALSE. default value TRUE. NOTE: FALSE,non-corr matrix p.mat Matrix p-value, NULL, parameter sig.level, insig, pch, pch.col, pch.cex invalid. sig.level Significant level,  p-value p-mat bigger sig.level, corresponding correlation coefficient regarded insignificant. insig 'label_sig', may increasing vector significance levels, case pch used highest p-value interval multiple times (e.g. '*', '**', '***') lower p-value interval. insig Character, specialized insignificant correlation coefficients, 'pch' (default), 'p-value', 'blank', 'n', 'label_sig'. 'blank', wipe away corresponding glyphs; 'p-value', add p-values corresponding glyphs; 'pch', add characters (see pch details) corresponding glyphs; 'n', take measures; 'label_sig', mark significant correlations pch (see sig.level). pch Add character glyphs insignificant correlation coefficients(valid insig 'pch'). See par. pch.col color pch (valid insig 'pch'). pch.cex cex pch (valid insig 'pch'). plotCI Character, method ploting confidence interval. 'n', plot confidence interval. 'rect', plot rectangles whose upper side means upper bound lower side means lower bound, respectively. 'circle', first plot circle bigger absolute bound, plot smaller. Warning: two bounds sign, smaller circle wiped away, thus forming ring. Method 'square' similar 'circle'. lowCI.mat Matrix lower bound confidence interval. uppCI.mat Matrix upper bound confidence interval. na.label Label used rendering NA cells. Default '?'. 'square', cell rendered square na.label.col color. na.label.col Color used rendering NA cells. Default 'black'. win.asp Aspect ration whole plot. Value 1 currently compatible methods 'circle' 'square'. ... Additional arguments passing function text drawing text label.","code":""},{"path":"/reference/corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A visualization of a correlation matrix. — corrplot","text":"(Invisibly) returns list(corr, corrTrans, arg). corr reordered correlation matrix plotting. corrPos data frame xName, yName, x, y, corr p.value(p.mat NULL) column, x y position correlation matrix plot. arg list corrplot() input parameters' value. Now type .","code":""},{"path":"/reference/corrplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A visualization of a correlation matrix. — corrplot","text":"corrplot function offers flexible ways visualize   correlation matrix, lower upper bound confidence interval matrix.","code":""},{"path":"/reference/corrplot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"A visualization of a correlation matrix. — corrplot","text":"Cairo cairoDevice packages strongly recommended   produce high-quality PNG, JPEG, TIFF bitmap files, especially   method circle, ellipse. Row- column names input matrix used labels rendered   corrplot. Plothmath expressions used name prefixed   one following characters: :, = $.   example ':alpha + beta'.","code":""},{"path":"/reference/corrplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A visualization of a correlation matrix. — corrplot","text":"Michael Friendly (2002). Corrgrams: Exploratory displays correlation matrices. American Statistician, 56, 316--324. D.J. Murdoch, E.D. Chow (1996). graphical display large correlation matrices. American Statistician, 50, 178--180.","code":""},{"path":[]},{"path":"/reference/corrplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A visualization of a correlation matrix. — corrplot","text":"Taiyun Wei (weitaiyun@gmail.com) Viliam Simko (viliam.simko@gmail.com) Michael Levy (michael.levy@healthcatalyst.com)","code":""},{"path":"/reference/corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A visualization of a correlation matrix. — corrplot","text":"","code":"data(mtcars) M = cor(mtcars) set.seed(0)  ##  different color series ## COL2: Get diverging colors ## c('RdBu', 'BrBG', 'PiYG', 'PRGn', 'PuOr', 'RdYlBu') ## COL1: Get sequential colors ## c('Oranges', 'Purples', 'Reds', 'Blues', 'Greens', 'Greys', 'OrRd', 'YlOrRd', 'YlOrBr', 'YlGn')  wb = c('white', 'black')  par(ask = TRUE)  ## different color scale and methods to display corr-matrix corrplot(M, method = 'number', col = 'black', cl.pos = 'n')  corrplot(M, method = 'number')  corrplot(M)  corrplot(M, order = 'AOE')  corrplot(M, order = 'AOE', addCoef.col = 'grey')   corrplot(M, order = 'AOE',  cl.length = 21, addCoef.col = 'grey')  corrplot(M, order = 'AOE', col = COL2(n=10), addCoef.col = 'grey')   corrplot(M, order = 'AOE', col = COL2('PiYG'))  corrplot(M, order = 'AOE', col = COL2('PRGn'), addCoef.col = 'grey')  corrplot(M, order = 'AOE', col = COL2('PuOr', 20), cl.length = 21, addCoef.col = 'grey')  corrplot(M, order = 'AOE', col = COL2('PuOr', 10), addCoef.col = 'grey')   corrplot(M, order = 'AOE', col = COL2('RdYlBu', 100))  corrplot(M, order = 'AOE', col = COL2('RdYlBu', 10))    corrplot(M, method = 'color', col = COL2(n=20), cl.length = 21, order = 'AOE',          addCoef.col = 'grey')  corrplot(M, method = 'square', col = COL2(n=200), order = 'AOE')  corrplot(M, method = 'ellipse', col = COL2(n=200), order = 'AOE')  corrplot(M, method = 'shade', col = COL2(n=20), order = 'AOE')  corrplot(M, method = 'pie', order = 'AOE')   ## col = wb corrplot(M, col = wb, order = 'AOE', outline = TRUE, cl.pos = 'n')   ## like Chinese wiqi, suit for either on screen or white-black print. corrplot(M, col = wb, bg = 'gold2',  order = 'AOE', cl.pos = 'n')    ## mixed methods: It's more efficient if using function 'corrplot.mixed' ## circle + ellipse corrplot(M, order = 'AOE', type = 'upper', tl.pos = 'd') corrplot(M, add = TRUE, type = 'lower', method = 'ellipse', order = 'AOE',          diag = FALSE, tl.pos = 'n', cl.pos = 'n')   ## circle + square corrplot(M, order = 'AOE', type = 'upper', tl.pos = 'd') corrplot(M, add = TRUE, type = 'lower', method = 'square', order = 'AOE',          diag = FALSE, tl.pos = 'n', cl.pos = 'n')   ## circle + colorful number corrplot(M, order = 'AOE', type = 'upper', tl.pos = 'd') corrplot(M, add = TRUE, type = 'lower', method = 'number', order = 'AOE',          diag = FALSE, tl.pos = 'n', cl.pos = 'n')   ## circle + black number corrplot(M, order = 'AOE', type = 'upper', tl.pos = 'tp') corrplot(M, add = TRUE, type = 'lower', method = 'number', order = 'AOE',          col = 'black', diag = FALSE, tl.pos = 'n', cl.pos = 'n')    ## order is hclust and draw rectangles corrplot(M, order = 'hclust')  corrplot(M, order = 'hclust', addrect = 2)  corrplot(M, order = 'hclust', addrect = 3, rect.col = 'red')  corrplot(M, order = 'hclust', addrect = 4, rect.col = 'blue')  corrplot(M, order = 'hclust', hclust.method = 'ward.D2', addrect = 4)   ## visualize a  matrix in [0, 1] corrplot(abs(M), order = 'AOE', col.lim = c(0, 1))  corrplot(abs(M), order = 'AOE', is.corr = FALSE,  col.lim = c(0, 1))    # when is.corr=TRUE, col.lim only affect the color legend # If you change it, the color is still assigned on [-1, 1] corrplot(M/2)  corrplot(M/2, col.lim = c(-0.5, 0.5))   # when is.corr=FALSE, col.lim is also used to assign colors # if the matrix have both positive and negative values # the matrix transformation keep every values positive and negative corrplot(M*2, is.corr = FALSE, col.lim = c(-2, 2))  corrplot(M*2, is.corr = FALSE, col.lim = c(-2, 2) * 2) #> Warning: col.lim interval too wide, please set a suitable value  corrplot(M*2, is.corr = FALSE, col.lim = c(-2, 2) * 4) #> Warning: col.lim interval too wide, please set a suitable value   ## 0.5~0.6 corrplot(abs(M)/10+0.5, col = COL1('Greens', 10))  corrplot(abs(M)/10+0.5, is.corr = FALSE, col.lim = c(0.5, 0.6), col = COL1('YlGn', 10))    ## visualize a  matrix in [-100, 100] ran = round(matrix(runif(225, -100, 100), 15)) corrplot(ran, is.corr = FALSE)  corrplot(ran, is.corr = FALSE, col.lim = c(-100, 100))   ## visualize a matrix in [100, 300] ran2 = ran + 200  # bad color, not suitable for a matrix in [100, 300] corrplot(ran2, is.corr = FALSE, col.lim = c(100, 300), col = COL2(, 100))   # good color corrplot(ran2, is.corr = FALSE, col.lim = c(100, 300), col = COL1(, 100))    ## text-labels and plot type corrplot(M, order = 'AOE', tl.srt = 45)  corrplot(M, order = 'AOE', tl.srt = 60)  corrplot(M, order = 'AOE', tl.pos = 'd', cl.pos = 'n')  corrplot(M, order = 'AOE', diag = FALSE, tl.pos = 'd')  corrplot(M, order = 'AOE', type = 'upper')  corrplot(M, order = 'AOE', type = 'upper', diag = FALSE)  corrplot(M, order = 'AOE', type = 'lower', cl.pos = 'b')  corrplot(M, order = 'AOE', type = 'lower', cl.pos = 'b', diag = FALSE)     #### color-legend corrplot(M, order = 'AOE', cl.ratio = 0.2, cl.align = 'l')  corrplot(M, order = 'AOE', cl.ratio = 0.2, cl.align = 'c')  corrplot(M, order = 'AOE', cl.ratio = 0.2, cl.align = 'r')  corrplot(M, order = 'AOE', cl.pos = 'b')  corrplot(M, order = 'AOE', cl.pos = 'b', tl.pos = 'd')  corrplot(M, order = 'AOE', cl.pos = 'n')    ## deal with missing Values M2 = M diag(M2) = NA corrplot(M2)  corrplot(M2, na.label = 'o')  corrplot(M2, na.label = 'NA')    ##the input matrix is not square corrplot(M[1:8, ])  corrplot(M[, 1:8])   testRes = cor.mtest(mtcars, conf.level = 0.95)  ## specialized the insignificant value according to the significant level corrplot(M, p.mat = testRes$p, sig.level = 0.05, order = 'hclust', addrect = 2)   ## leave blank on no significant coefficient corrplot(M, p.mat = testRes$p, method = 'circle', type = 'lower', insig ='blank',          addCoef.col ='black', number.cex = 0.8, order = 'AOE', diag = FALSE)   ## add p-values on no significant coefficients corrplot(M, p.mat = testRes$p, insig = 'p-value')   ## add all p-values corrplot(M, p.mat = testRes$p, insig = 'p-value', sig.level = -1)   ## add significant level stars corrplot(M, p.mat = testRes$p, method = 'color', diag = FALSE, type = 'upper',          sig.level = c(0.001, 0.01, 0.05), pch.cex = 0.9,          insig = 'label_sig', pch.col = 'grey20', order = 'AOE')   ## add significant level stars and cluster rectangles corrplot(M, p.mat = testRes$p, tl.pos = 'd', order = 'hclust', addrect = 2,          insig = 'label_sig', sig.level = c(0.001, 0.01, 0.05),          pch.cex = 0.9, pch.col = 'grey20')   # Visualize confidence interval corrplot(M, lowCI = testRes$lowCI, uppCI = testRes$uppCI, order = 'hclust',          tl.pos = 'd', rect.col = 'navy', plotC = 'rect', cl.pos = 'n')   # Visualize confidence interval and cross the significant coefficients corrplot(M, p.mat = testRes$p, lowCI = testRes$lowCI, uppCI = testRes$uppCI,          addrect = 3, rect.col = 'navy', plotC = 'rect', cl.pos = 'n')     res1 = cor.mtest(mtcars, conf.level = 0.95) res2 = cor.mtest(mtcars, conf.level = 0.99)   ## plot confidence interval(0.95), 'circle' method corrplot(M, low = res1$uppCI, upp = res1$uppCI,          plotCI = 'circle', addg = 'grey20', cl.pos = 'n')  corrplot(M, p.mat = res1$p, low = res1$lowCI, upp = res1$uppCI,          plotCI = 'circle', addg = 'grey20', cl.pos = 'n')  corrplot(M, low = res1$lowCI, upp = res1$uppCI,          col = c('white', 'black'), bg = 'gold2', order = 'AOE',          plotCI = 'circle', cl.pos = 'n', pch.col = 'red')  corrplot(M, p.mat = res1$p, low = res1$lowCI, upp = res1$uppCI,          col = c('white', 'black'), bg = 'gold2', order = 'AOE',          plotCI = 'circle', cl.pos = 'n', pch.col = 'red')   ## plot confidence interval(0.95), 'square' method corrplot(M, low = res1$lowCI, upp = res1$uppCI,          col = c('white', 'black'), bg = 'gold2', order = 'AOE',          plotCI = 'square', addg = NULL, cl.pos = 'n')  corrplot(M, p.mat = res1$p, low = res1$lowCI, upp = res1$uppCI,          col = c('white', 'black'), bg = 'gold2', order = 'AOE', pch.col = 'red',          plotCI = 'square', addg = NULL, cl.pos = 'n')   ## plot confidence interval0.95, 0.95, 0.99, 'rect' method corrplot(M, low = res1$lowCI, upp = res1$uppCI, order = 'hclust',          rect.col = 'navy', plotCI = 'rect', cl.pos = 'n')  corrplot(M, p.mat = res1$p, low = res1$lowCI, upp = res1$uppCI,          order = 'hclust', pch.col = 'red', sig.level = 0.05, addrect = 3,          rect.col = 'navy', plotCI = 'rect', cl.pos = 'n')  corrplot(M, p.mat = res2$p, low = res2$lowCI, upp = res2$uppCI,          order = 'hclust', pch.col = 'red', sig.level = 0.01, addrect = 3,          rect.col = 'navy', plotCI = 'rect', cl.pos = 'n')    ## an animation of changing confidence interval in different significance level ## begin.animaton par(ask = FALSE) for (i in seq(0.1, 0, -0.005)) {   tmp = cor.mtest(mtcars, conf.level = 1 - i)   corrplot(M, p.mat = tmp$p, low = tmp$lowCI, upp = tmp$uppCI, order = 'hclust',            pch.col = 'red', sig.level = i, plotCI = 'rect', cl.pos = 'n',            mar = c(0, 0, 1, 0),            title = substitute(alpha == x,                               list(x = format(i, digits = 3, nsmall = 3))))   Sys.sleep(0.15) }                      ## end.animaton"},{"path":"/reference/corrplot.mixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Using mixed methods to visualize a correlation matrix. — corrplot.mixed","title":"Using mixed methods to visualize a correlation matrix. — corrplot.mixed","text":"Using mixed methods visualize correlation matrix.","code":""},{"path":"/reference/corrplot.mixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Using mixed methods to visualize a correlation matrix. — corrplot.mixed","text":"","code":"corrplot.mixed(   corr,   lower = \"number\",   upper = \"circle\",   tl.pos = c(\"d\", \"lt\", \"n\"),   diag = c(\"n\", \"l\", \"u\"),   bg = \"white\",   addgrid.col = \"grey\",   lower.col = NULL,   upper.col = NULL,   plotCI = c(\"n\", \"square\", \"circle\", \"rect\"),   mar = c(0, 0, 0, 0),   ... )"},{"path":"/reference/corrplot.mixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Using mixed methods to visualize a correlation matrix. — corrplot.mixed","text":"corr Matrix, correlation matrix visualize. lower Character, visualization method lower triangular correlation matrix. upper Character, visualization method upper triangular correlation matrix. tl.pos Character, 'lt', 'd' 'n', giving position text labels, 'lt' means left top,  'd' means diagonal. 'n',  add textlabel. diag Character, specifying glyph principal diagonal. one 'n' (default,  draw nothing), 'l' (draw glyphs lower triangular) 'u' (draw glyphs upper triangular). bg background color. addgrid.col See addgrid.col parameter function corrplot lower.col Passed col parameter lower matrix. upper.col Passed col parameter upper matrix. plotCI See plotCI parameter function corrplot mar See par. ... Additional arguments corrplot's wrappers","code":""},{"path":"/reference/corrplot.mixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Using mixed methods to visualize a correlation matrix. — corrplot.mixed","text":"Taiyun Wei","code":""},{"path":"/reference/corrplot.mixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Using mixed methods to visualize a correlation matrix. — corrplot.mixed","text":"","code":"M = cor(mtcars) ord = corrMatOrder(M, order = 'AOE') M2 = M[ord, ord]   corrplot.mixed(M2)  corrplot.mixed(M2, lower = 'ellipse', upper = 'circle')  corrplot.mixed(M2, lower = 'square', upper = 'circle')  corrplot.mixed(M2, lower = 'shade', upper = 'circle')  corrplot.mixed(M2, tl.pos = 'lt')  corrplot.mixed(M2, tl.pos = 'lt', diag = 'u')  corrplot.mixed(M2, tl.pos = 'lt', diag = 'l')  corrplot.mixed(M2, tl.pos = 'n')"},{"path":"/reference/corrRect.hclust.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw rectangles on the correlation matrix graph. — corrRect.hclust","title":"Draw rectangles on the correlation matrix graph. — corrRect.hclust","text":"Draw rectangles correlation matrix graph based hierarchical cluster (hclust).","code":""},{"path":"/reference/corrRect.hclust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw rectangles on the correlation matrix graph. — corrRect.hclust","text":"","code":"corrRect.hclust(   corr,   k = 2,   col = \"black\",   lwd = 2,   method = c(\"complete\", \"ward\", \"ward.D\", \"ward.D2\", \"single\", \"average\", \"mcquitty\",     \"median\", \"centroid\") )"},{"path":"/reference/corrRect.hclust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw rectangles on the correlation matrix graph. — corrRect.hclust","text":"corr Correlation matrix function corrRect.hclust. use 1-corr dist  hierarchical clustering (hclust). k Integer, number rectangles drawn graph according hierarchical cluster, function corrRect.hclust. col Color rectangles. lwd Line width rectangles. method Character, agglomeration method used hierarchical clustering (hclust). (unambiguous abbreviation ) one 'ward', 'ward.D', 'ward.D2', 'single', 'complete', 'average', 'mcquitty', 'median' 'centroid'.","code":""},{"path":"/reference/corrRect.hclust.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw rectangles on the correlation matrix graph. — corrRect.hclust","text":"Taiyun Wei","code":""},{"path":"/reference/corrRect.hclust.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw rectangles on the correlation matrix graph. — corrRect.hclust","text":"","code":"data(mtcars) M = cor(mtcars) corrplot(M, order = 'FPC') -> p corrRect(p, index = c(1, 6, 11))  if(getRversion() >= '4.1.0') {   corrplot(M, order = 'FPC') |> corrRect(index = c(1, 6, 11)) }   (order.hc = corrMatOrder(M, order = 'hclust')) #>  [1] 11  6  4  2  3  7  8  1  5  9 10 (order.hc2 = corrMatOrder(M, order = 'hclust', hclust.method = 'ward.D2')) #>  [1]  6  2  3  4 11  7  8  1  5  9 10 M.hc  = M[order.hc, order.hc] M.hc2 = M[order.hc2, order.hc2]  par(ask = TRUE)  # same as: corrplot(M, order = 'hclust', addrect = 2) corrplot(M.hc) corrRect.hclust(corr = M.hc, k = 2)   # same as: corrplot(M, order = 'hclust', addrect = 3) corrplot(M.hc) corrRect.hclust(corr = M.hc, k = 3)   # same as: corrplot(M, order = 'hclust', hclust.method = 'ward.D2', addrect = 2) corrplot(M.hc2) corrRect.hclust(M.hc2, k = 2, method = 'ward.D2')   # same as: corrplot(M, order = 'hclust', hclust.method = 'ward.D2', addrect = 3) corrplot(M.hc2) corrRect.hclust(M.hc2, k = 3, method = 'ward.D2')   # same as: corrplot(M, order = 'hclust', hclust.method = 'ward.D2', addrect = 4) corrplot(M.hc2) corrRect.hclust(M.hc2, k = 4, method = 'ward.D2')"},{"path":"/reference/corrRect.html","id":null,"dir":"Reference","previous_headings":"","what":"Draw rectangle(s) on the correlation matrix graph. — corrRect","title":"Draw rectangle(s) on the correlation matrix graph. — corrRect","text":"Draw rectangle(s) correlation matrix plotted. SUGGESTION: convenient draw rectangle(s) using pipe operator `|>` since R 4.1.0.","code":""},{"path":"/reference/corrRect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draw rectangle(s) on the correlation matrix graph. — corrRect","text":"","code":"corrRect(   corrRes = NULL,   index = NULL,   name = NULL,   namesMat = NULL,   col = \"black\",   lwd = 2,   ... )"},{"path":"/reference/corrRect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draw rectangle(s) on the correlation matrix graph. — corrRect","text":"corrRes List corrplot() returns. index Vector, variable index diag rect c(Rect1from, Rect2from, Rect3from, ..., RectNto) correlation matrix graph. works colnames rownames, NULL. needs corrRes inputted. name Vector, variable name diag rect c(Rect1from, Rect2from, Rect3from, ..., RectNto) correlation matrix graph. OIt works colnames rownames. needs corrRes inputted. namesMat 4-length character vector 4-columns character matrix, represents names xleft, ybottom, xright, ytop correspondingly. needs corrRes inputted. col Color rectangles. lwd Line width rectangles. ... Additional arguments passing function rect().","code":""},{"path":"/reference/corrRect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draw rectangle(s) on the correlation matrix graph. — corrRect","text":"(Invisibly) returns input parameter corrRes, usually list(corr, corrTrans, arg).","code":""},{"path":"/reference/corrRect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Draw rectangle(s) on the correlation matrix graph. — corrRect","text":"corrRect needs one index, name namesMat inputted. corrRect.hclust can get members cluster based hierarchical clustering (hclust).","code":""},{"path":"/reference/corrRect.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Draw rectangle(s) on the correlation matrix graph. — corrRect","text":"Taiyun Wei","code":""},{"path":"/reference/corrRect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draw rectangle(s) on the correlation matrix graph. — corrRect","text":"","code":"data(mtcars) M = cor(mtcars)  r = rbind(c('gear', 'wt', 'qsec', 'carb'),         c('wt', 'gear', 'carb', 'qsec')) corrplot(M, order = 'AOE') -> p corrRect(p, namesMat = r)   #  same as using pipe operator `|>` if R version >= 4.1.0: #  corrplot(M, order = 'AOE') |> corrRect(namesMat = r)    r = c('gear', 'carb', 'qsec', 'wt') corrplot(M, order = 'AOE', type='lower') -> p corrRect(p, namesMat = r)   # same as using pipe operator `|>` if R version >= 4.1.0: # corrplot(M, order = 'AOE', type='lower') |> corrRect(namesMat = r)    corrplot(M, order = 'hclust', type = 'upper') -> p corrRect(p, index = c(1, 6, 11))   #  same as using pipe operator `|>` if R version >= 4.1.0: #  corrplot(M, order = 'AOE', type='lower') |> corrRect(index = c(1, 6, 11))    corrplot(M, order = 'hclust') -> p corrRect(p, name = c('carb', 'qsec', 'gear'))   #  same as using pipe operator `|>` if R version >= 4.1.0: #  corrplot(M, order = 'hclust') |> corrRect(name = c('carb', 'qsec', 'gear'))     (order.hc = corrMatOrder(M, order = 'hclust')) #>  [1] 11  6  4  2  3  7  8  1  5  9 10 (order.hc2 = corrMatOrder(M, order = 'hclust', hclust.method = 'ward.D')) #>  [1]  6  2  3  4 11  7  8  9 10  1  5 M.hc  = M[order.hc, order.hc] M.hc2 = M[order.hc2, order.hc2]  par(ask = TRUE)  # same as: corrplot(M, order = 'hclust', addrect = 2) corrplot(M.hc) corrRect.hclust(corr = M.hc, k = 2)   # same as: corrplot(M, order = 'hclust', addrect = 3) corrplot(M.hc) corrRect.hclust(corr = M.hc, k = 3)   # same as: corrplot(M, order = 'hclust', hclust.method = 'ward.D', addrect = 2) corrplot(M.hc2) corrRect.hclust(M.hc2, k = 2, method = 'ward.D')   # same as: corrplot(M, order = 'hclust', hclust.method = 'ward.D', addrect = 3) corrplot(M.hc2) corrRect.hclust(M.hc2, k = 3, method = 'ward.D')   # same as: corrplot(M, order = 'hclust', hclust.method = 'ward.D', addrect = 4) corrplot(M.hc2) corrRect.hclust(M.hc2, k = 4, method = 'ward.D')"},{"path":[]},{"path":"/news/index.html","id":"changes-0-93","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.93","text":"Fix #247: addgrid.col bg don’t work mixed plot. (thanks, @ZoomMan91) Fix #246: using insig = \"n\" p.mat sometimes causes error. (thanks, @Sumidu) Fix #255: add new parameter transKeepSign, whether keep matrix values’ sign transforming non-corr matrix.","code":""},{"path":"/news/index.html","id":"corrplot-092","dir":"Changelog","previous_headings":"","what":"corrplot 0.92","title":"corrplot 0.92","text":"CRAN release: 2021-11-18","code":""},{"path":"/news/index.html","id":"changes-0-92","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.92","text":"Fix #228: assigning colors incorrectly .corr = FALSE. (thanks, @bixiou) Fix #232: functions wrongly marked pure. Fix colorlegend lables alignment type = 'lower'. Revise document.","code":""},{"path":"/news/index.html","id":"corrplot-091","dir":"Changelog","previous_headings":"","what":"corrplot 0.91","title":"corrplot 0.91","text":"CRAN release: 2021-11-10","code":""},{"path":"/news/index.html","id":"changes-0-91","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.91","text":"tl.pos add new parameter 'l' corrplot(). (thanks, @ggordn3r) Add new function COL1(): Get sequential colors. Add new function COL2(): Get diverging colors.","code":""},{"path":"/news/index.html","id":"corrplot-090","dir":"Changelog","previous_headings":"","what":"corrplot 0.90","title":"corrplot 0.90","text":"CRAN release: 2021-06-30","code":""},{"path":"/news/index.html","id":"changes-0-90","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.90","text":"Add customizable rectangles correlation plots corrRect().(#185, requirements @douglaswhitaker thanks). Remove clus; add index name parameters corrRect(). Add xName, yName two columns corrPos data frame(e.g. corrplot(...)$corrPos). Rename parameter cl.lim col.lim corrplot(). Add arg corrplot() return list. Add pipe operator |> examples using corrRect(). Set ‘seriation’ Suggests package, add examples document. Parameter number.digits also works p-value. (thanks, @bassam-abulnoor) Revise document. (thanks, Shuai Huang)","code":""},{"path":"/news/index.html","id":"corrplot-089","dir":"Changelog","previous_headings":"","what":"corrplot 0.89","title":"corrplot 0.89","text":"CRAN release: 2021-06-07","code":""},{"path":"/news/index.html","id":"changes-0-89","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.89","text":"Change return value corrplot() corrplot.mixed() matrix corr list(corr, corrPos) Fix #177: top margin small parameter type ‘lower’ ‘upper’. (thanks, @lijian13) Parameter addCoef.col works prior parameter insig Revise document","code":""},{"path":"/news/index.html","id":"corrplot-088","dir":"Changelog","previous_headings":"","what":"corrplot 0.88","title":"corrplot 0.88","text":"CRAN release: 2021-05-11","code":""},{"path":"/news/index.html","id":"changes-0-88","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.88","text":"Revise document Remove full_col fix #152 #157 #165 #166 Fix #150 document, arcus tangens functions. (thanks, @surmann) Change vignette engine ‘knitr::knitr’ ‘knitr::rmarkdown’ Use ‘prettydoc’ package creating vignettes Set ‘rmarkdown’ ‘prettydoc’ Suggests packages","code":""},{"path":"/news/index.html","id":"corrplot-087","dir":"Changelog","previous_headings":"","what":"corrplot 0.87","title":"corrplot 0.87","text":"CRAN release: 2021-05-08","code":""},{"path":"/news/index.html","id":"changes-0-87","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.87","text":"Change MIT license Fix #142: NA issues cl.lim supplied. (thanks, @AlexChristensen)","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-0-83","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.83","text":"CITATION now uses fields DESCRIPTION RColorBrewer now suggested package (required)","code":""},{"path":"/news/index.html","id":"new-features-0-83","dir":"Changelog","previous_headings":"","what":"New features","title":"corrplot 0.83","text":"Fixed #99 : new option insig = ‘label_sig’ mark significant correlations.","code":""},{"path":[]},{"path":"/news/index.html","id":"bug-fixes-0-82","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"corrplot 0.82","text":"Fixed #10: corrplot type = ‘upper’ long colname strings cuts top labels Fixed #19: Color Legend 0 width 1 column used Fixed #70: NA errors .corr = F Fixed #77: Error matrix(corr) contains NA values.","code":""},{"path":"/news/index.html","id":"new-features-0-82","dir":"Changelog","previous_headings":"","what":"New features","title":"corrplot 0.82","text":"Fixed #18: title position pie corrplot background circle.Used existing parameter outline control border color pie symbols. Fixed #66: lim.segment parameter default value. Added default value ‘auto’ lim.segment parameter Fixed #76: corrplot.mixed black color correlation coefficient.Added two new parameters lower.col upper.col Fixed #79: Changing aspect ratio plot.Added new parameter win.asp controls aspect ratio plotted matrix. Added examples vignette","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-0-81","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.81","text":"Fixed #79: added parameter win.asp control aspect ratio Fixed #18: parameter outline combined method='pie' controls color otline circle pie. updated vignette","code":""},{"path":[]},{"path":"/news/index.html","id":"changes-0-80","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.80","text":"Fixed #70: Enable plot matrix NA ‘.corr = F’","code":""},{"path":"/news/index.html","id":"corrplot-077","dir":"Changelog","previous_headings":"","what":"corrplot 0.77","title":"corrplot 0.77","text":"CRAN release: 2016-04-21","code":""},{"path":"/news/index.html","id":"changes-0-77","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.77","text":"Fixed #58: make sure margin correct corrplot.mixed(). Revised document.","code":""},{"path":"/news/index.html","id":"corrplot-076","dir":"Changelog","previous_headings":"","what":"corrplot 0.76","title":"corrplot 0.76","text":"CRAN release: 2016-04-16","code":""},{"path":"/news/index.html","id":"changes-0-76","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.76","text":"corrplot(), added parameters na.label na.label.col define NA values inside matrix rendered. corrplot(), na.label can now use one two characters, default ‘?’ (issue #55) Fixed #16: checks [-1, 1] interval strict. Fixed #15: error correlation plot using insig argument values significant. Fixed #9: added ward.D ward.D2 hclust methods (thanks, #jeffzemla)","code":""},{"path":"/news/index.html","id":"corrplot-070","dir":"Changelog","previous_headings":"","what":"corrplot 0.70","title":"corrplot 0.70","text":"CRAN release: 2012-10-12","code":""},{"path":"/news/index.html","id":"changes-0-70","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.70","text":"corrplot(), parameter insig add option ‘p-value’, now p-values can conveniently added glyph. Return value changes, corrplot() now returns reordered correlation matrix.","code":""},{"path":"/news/index.html","id":"corrplot-066","dir":"Changelog","previous_headings":"","what":"corrplot 0.66","title":"corrplot 0.66","text":"CRAN release: 2012-09-12","code":""},{"path":"/news/index.html","id":"changes-0-66","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.66","text":"Add html vignette, generated markdown file knitr. corrplot(), remove parameter ‘zoom’, add ‘.corr’; now convenient visualize non-correlation matrix. Parameter ‘addtextlabel’ renamed ‘tl.pos’, ‘addcolorlabel’ renamed ‘cl.pos’.","code":""},{"path":"/news/index.html","id":"corrplot-060","dir":"Changelog","previous_headings":"","what":"corrplot 0.60","title":"corrplot 0.60","text":"CRAN release: 2011-12-05","code":""},{"path":"/news/index.html","id":"new-features-0-60","dir":"Changelog","previous_headings":"","what":"New features","title":"corrplot 0.60","text":"Now corrplot() can deal matrix [-1,1] parameter ‘zoom’ now. Warning: please make sure visualization take data zoom meaningful!","code":""},{"path":"/news/index.html","id":"changes-0-60","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.60","text":"Function corr.rect() renamed corrRect(). Revise document. (THANKS, Tao Gao) function corrplot(), ‘order’‘s choice ’PCA’ precisely renamed ‘AOE’. ‘FPC’ added first principal component order. Add function corrMatOrder(), corrplot.mixed(). Remove seldom used functions: corrplot.circle(), corrplot.ellipse(), corrplot.square(), corrplot.shade(), corrplot.color(), corrplot.number(). corrplot(), remove parameter ‘assign.col’ ‘cl.range’, add ‘zoom’, ‘cl.lim’ ‘addCoefasPercent’.","code":""},{"path":"/news/index.html","id":"corrplot-054","dir":"Changelog","previous_headings":"","what":"corrplot 0.54","title":"corrplot 0.54","text":"CRAN release: 2011-12-02","code":""},{"path":"/news/index.html","id":"changes-0-54","dir":"Changelog","previous_headings":"","what":"Changes","title":"corrplot 0.54","text":"Parameter ‘tl.cex’ function corrplot() sensitive.","code":""},{"path":"/news/index.html","id":"bug-fixes-0-54","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"corrplot 0.54","text":"issue much space adding margins (especially using longer text label larger font size) fixed. Specifying wrong color glyphs fixed.","code":""}]
